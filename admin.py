# -*- coding: utf-8 -*-
"""admin

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S9lELbDuvcsZLsJ_P91yXmGgGXQLJ8-l
"""

import streamlit as st
import pandas as pd
import os
import smtplib
from email.message import EmailMessage

# --- Email config (Mailtrap) ---
smtp_server = "sandbox.smtp.mailtrap.io"
smtp_port = 2525
smtp_user = "57ce8f34059f69"
smtp_password = "ca2168fedda898"
sender_email = "your_email@example.com"  # Replace with your sender email

def send_email(to_email, subject, content):
    msg = EmailMessage()
    msg['Subject'] = subject
    msg['From'] = sender_email
    msg['To'] = to_email
    msg.set_content(content)
    try:
        with smtplib.SMTP(smtp_server, smtp_port) as smtp:
            smtp.login(smtp_user, smtp_password)
            smtp.send_message(msg)
        return True
    except Exception as e:
        print(f"Email error: {e}")
        return False

def send_status_update_email(to_email, report):
    subject = f"🚰 Update on Your Water Leak Report ({report['ReportID']})"
    content = f"""
Dear {report['Name']},

Your water leak report has been updated.

Report ID: {report['ReportID']}
Location: {report['Location']}
Leak Type: {report['Leak Type']}
Submitted: {report['DateTime']}
New Status: {report['Status']}

Thank you for contributing to water conservation in your community.

Regards,
Water Reporting Team
"""
    return send_email(to_email, subject, content)

st.set_page_config(page_title="Water Leakage Reporting - Admin", page_icon="🛠️")
st.title("🚰 Water Leakage Reporting - Admin Panel")

admin_code = st.text_input("Enter Admin Code", type="password")
if admin_code == "letmein":
    if os.path.exists("leak_reports.csv"):

        # Button to refresh data
        if st.button("Refresh Reports"):
            df = pd.read_csv("leak_reports.csv")
            st.success("✅ Reports refreshed.")

        # Always load latest data before displaying or updating
        df = pd.read_csv("leak_reports.csv")
        st.dataframe(df)

        st.markdown("---")
        st.subheader("Update Report Status")

        report_id = st.text_input("Report ID to update")
        new_status = st.selectbox("New Status", ["Pending", "In Progress", "Resolved", "Dismissed"])

        if st.button("Update Status"):
            if report_id in df["ReportID"].values:
                df.loc[df["ReportID"] == report_id, "Status"] = new_status
                df.to_csv("leak_reports.csv", index=False)
                st.success(f"Updated {report_id} status to {new_status}")

                # Reload dataframe to show updated status
                df = pd.read_csv("leak_reports.csv")
                st.dataframe(df)

                # Send update email to user
                user_row = df[df["ReportID"] == report_id].iloc[0]
                user_email = user_row["Contact"]
                if "@" in user_email and "." in user_email:
                    email_sent = send_status_update_email(user_email, user_row)
                    if email_sent:
                        st.info(f"📨 Notification sent to {user_email}")
                    else:
                        st.warning("⚠️ Failed to send notification email.")
                else:
                    st.warning("⚠️ Invalid user email, no notification sent.")
            else:
                st.error("❌ Report ID not found.")
    else:
        st.warning("📁 No reports file found.")
else:
    st.info("🔐 Enter admin code to access the panel.")
