# -*- coding: utf-8 -*-
"""admin

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S9lELbDuvcsZLsJ_P91yXmGgGXQLJ8-l
"""
import streamlit as st
import os
import re
from datetime import datetime
import gspread
from google.oauth2.service_account import Credentials

# --- Google Sheets setup ---
SPREADSHEET_ID = "1leh-sPgpoHy3E62l_Rnc11JFyyF-kBNlWTICxW1tam8"  # Replace with your Google Sheets ID

def save_report_to_sheets(report):
    scopes = ["https://www.googleapis.com/auth/spreadsheets"]
    creds = Credentials.from_service_account_info(
        st.secrets["google_service_account"],
        scopes=scopes
    )
    client = gspread.authorize(creds)
    sheet = client.open_by_key(SPREADSHEET_ID).sheet1

    # Append the report as a new row (ensure order matches your sheet headers)
    row = [
        report["Name"],
        report["Contact"],
        report["Municipality"],
        report["Leak Type"],
        report["Location"],
        report["DateTime"]
    ]
    sheet.append_row(row)

# --- Helper functions ---
def is_valid_email(email):
    pattern = r'^[\w\.-]+@[\w\.-]+\.\w+$'
    return re.match(pattern, email) is not None

# --- Streamlit UI ---
st.title("üö∞ Water Leakage Reporting App")
st.markdown("Help your community by reporting water leaks. Fill in the details below:")

# Inputs
name = st.text_input("Full Name")
contact = st.text_input("Contact Information (Phone/Email)", placeholder="example@email.com")
location = st.text_input("Location of Leak", placeholder="e.g., 123 Main St, Springfield")

leak_types = ["Burst Pipe", "Leakage", "Sewage Overflow", "Other"]
description = st.selectbox("Type of Leak", leak_types)

municipalities = [
    "City of Johannesburg",
    "City of Cape Town",
    "eThekwini",
    "Buffalo City",
    "Mangaung",
    "Nelson Mandela Bay",
    "Other"
]
municipality = st.selectbox("Select Your Municipality", municipalities)

image = st.file_uploader("Upload an image of the leak (optional)", type=["jpg", "jpeg", "png"])

# Submission
if st.button("Submit Report"):
    if not name or not contact or not location or not description or not municipality:
        st.error("‚ùó Please complete all required fields.")
    elif '@' in contact and not is_valid_email(contact):
        st.error("‚ùó Please enter a valid email address.")
    else:
        # Save uploaded image if any
        if image:
            os.makedirs("leak_images", exist_ok=True)
            image_path = os.path.join("leak_images", f"{datetime.now().strftime('%Y%m%d_%H%M%S')}_{image.name}")
            with open(image_path, "wb") as f:
                f.write(image.read())
            st.success(f"Image saved as {image_path}")

        # Create report dict
        report = {
            "Name": name,
            "Contact": contact,
            "Municipality": municipality,
            "Leak Type": description,
            "Location": location,
            "DateTime": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        }

        # Save report to Google Sheets
        try:
            save_report_to_sheets(report)
            st.success("‚úÖ Report submitted successfully and saved to Google Sheets!")
        except Exception as e:
            st.error(f"‚ùó Failed to save report to Google Sheets: {e}")

        # Show report summary
        with st.expander("üìã View Report Summary"):
            st.json(report)
