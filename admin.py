# -*- coding: utf-8 -*-
"""admin

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S9lELbDuvcsZLsJ_P91yXmGgGXQLJ8-l
"""
import streamlit as st
import gspread
from google.oauth2.service_account import Credentials

# Google Sheets setup
SCOPE = ["https://www.googleapis.com/auth/spreadsheets"]
CREDS_FILE = "waterleakagereport-a7293c7d9ebe.json"  # Replace with your JSON key path
SPREADSHEET_ID = "1leh-sPgpoHy3E62l_Rnc11JFyyF-kBNlWTICxW1tam8"  # Replace with your Google Sheet ID

ADMIN_CODE = "admin1234"  # Change this to your preferred admin password

@st.cache_resource
def get_sheet():
    creds = Credentials.from_service_account_file(CREDS_FILE, scopes=SCOPE)
    client = gspread.authorize(creds)
    spreadsheet = client.open_by_key(SPREADSHEET_ID)
    return spreadsheet.sheet1

sheet = get_sheet()

def get_all_reports():
    return sheet.get_all_records()

def update_status(report_id, new_status):
    records = sheet.get_all_records()
    for i, row in enumerate(records, start=2):  # Header is row 1
        if row["ReportID"] == report_id:
            sheet.update_cell(i, 8, new_status)  # Column 8 is Status
            return True
    return False

# --- Streamlit UI ---
st.title("üö∞ Water Leakage Reporting - Admin Panel")

code = st.text_input("Enter Admin Code", type="password")

if code == ADMIN_CODE:
    st.success("Access Granted!")

    reports = get_all_reports()
    if not reports:
        st.info("üìÅ No reports found.")
    else:
        for report in reports:
            with st.expander(f"Report ID: {report['ReportID']} - Status: {report['Status']}"):
                st.write(f"**Name:** {report['Name']}")
                st.write(f"**Contact:** {report['Contact']}")
                st.write(f"**Municipality:** {report['Municipality']}")
                st.write(f"**Leak Type:** {report['Leak Type']}")
                st.write(f"**Location:** {report['Location']}")
                st.write(f"**Date & Time:** {report['DateTime']}")

                new_status = st.selectbox("Update Status", 
                    ["Pending", "In Progress", "Resolved", "Closed"], index=["Pending", "In Progress", "Resolved", "Closed"].index(report['Status']), key=report['ReportID'])

                if st.button(f"Update Status for {report['ReportID']}", key=f"btn_{report['ReportID']}"):
                    if new_status != report['Status']:
                        success = update_status(report['ReportID'], new_status)
                        if success:
                            st.success(f"Status updated to '{new_status}'")
                        else:
                            st.error("Failed to update status. Please try again.")
                    else:
                        st.info("Status unchanged.")
else:
    if code:
        st.error("Invalid admin code.")
