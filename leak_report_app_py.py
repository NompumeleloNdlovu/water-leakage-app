# -*- coding: utf-8 -*-
"""leak_report_app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S9lELbDuvcsZLsJ_P91yXmGgGXQLJ8-l
"""

import streamlit as st
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime

# Google Sheets setup
SCOPE = ["https://www.googleapis.com/auth/spreadsheets"]
CREDS_FILE = "path/to/your/service_account_key.json"  # Replace with your JSON key path
SPREADSHEET_ID = "1leh-sPgpoHy3E62l_Rnc11JFyyF-kBNlWTICxW1tam8"  

@st.cache_resource
def get_sheet():
    creds = Credentials.from_service_account_file(CREDS_FILE, scopes=SCOPE)
    client = gspread.authorize(creds)
    spreadsheet = client.open_by_key(SPREADSHEET_ID)
    return spreadsheet.sheet1

sheet = get_sheet()

def append_report(report):
    sheet.append_row([
        report["ReportID"],
        report["Name"],
        report["Contact"],
        report["Municipality"],
        report["Leak Type"],
        report["Location"],
        report["DateTime"],
        report.get("Status", "Pending"),
    ])

def generate_report_id():
    return f"WR{int(datetime.now().timestamp())}"

# --- Streamlit UI ---
st.title("ðŸš° Water Leakage Reporting App")

name = st.text_input("Full Name")
contact = st.text_input("Contact Information (Phone/Email)")
municipality = st.selectbox("Select Your Municipality", [
    "City of Johannesburg",
    "City of Cape Town",
    "eThekwini",
    "Buffalo City",
    "Mangaung",
    "Nelson Mandela Bay",
    "Other"
])
leak_type = st.selectbox("Type of Leak", ["Burst Pipe", "Leakage", "Sewage Overflow", "Other"])
location = st.text_input("Location of Leak")

if st.button("Submit Report"):
    if not (name and contact and municipality and leak_type and location):
        st.error("Please fill in all fields.")
    else:
        report = {
            "ReportID": generate_report_id(),
            "Name": name,
            "Contact": contact,
            "Municipality": municipality,
            "Leak Type": leak_type,
            "Location": location,
            "DateTime": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            "Status": "Pending"
        }
        append_report(report)
        st.success(f"Report submitted successfully! Your Report ID is **{report['ReportID']}**.")
